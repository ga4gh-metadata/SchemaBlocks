{
   "definitions" : {
      "Biosample" : {
         "properties" : {
            "external_ids" : {
               "queries" : [
                  {
                     "query" : "db.biosamples.find( { \"external_ids.id\" : \"pubmed:17440070\" } )",
                     "description" : "the query will return all biosamples reported in this publication"
                  }
               ],
               "type" : "array",
               "example" : [
                  {
                     "relation" : "provenance",
                     "id" : "cellosaurus:CVCL_0312"
                  },
                  {
                     "relation" : "report",
                     "id" : "pubmed:17440070"
                  },
                  {
                     "relation" : "technology",
                     "id" : "geo:GPL4894"
                  },
                  {
                     "id" : "geo:GSM185088",
                     "relation" : "denotes"
                  }
               ],
               "items" : {
                  "$ref" : "./common/Reference_class"
               },
               "description" : "list of reference_class objects with properly (e.g. identifiers.org) prefixed external identifiers and a term describing the relationship"
            },
            "info" : {
               "description" : "This is a wrapper for objects without further specification in the schema.\n",
               "schema" : {
                  "$ref" : "./common/Info_class"
               },
               "queries" : [
                  {
                     "description" : "This query retrieves biosamples with an ISO8601 period value for \"followup_time\" and a boolean \"true\" for death.\n",
                     "query" : "db.biosamples.find( {\"info\" : { $elemMatch: { \"followup_time.value\" : { $regex : /\\P/ }, \"death.value\" : true } } } )"
                  }
               ],
               "example" : {
                  "death" : {
                     "type" : "boolean",
                     "value" : "1"
                  },
                  "followup_time" : {
                     "type" : "ISO8601 string",
                     "value" : "P14M"
                  }
               }
            },
            "updated" : {
               "example" : "2017-10-25T07:06:03Z",
               "type" : "string",
               "description" : "time of the last edit of this record, in ISO8601"
            },
            "geo_provenance" : {
               "example" : {
                  "country" : "Romania",
                  "label" : "Str Marasesti 5, 300077 Timisoara, Romania",
                  "longitude" : "21.23",
                  "latitude" : "45.75",
                  "altitude" : "94",
                  "city" : "Timisoara"
               },
               "description" : "This geo_class attribute ideally describes the geographic location of where the sample was extracted.\nFrequently this value may reflect either the place of the laboratory where the analysis was performed, or correspond to the corresponding author's institution.\n",
               "schema" : {
                  "$ref" : "./common/Geo_class"
               }
            },
            "id" : {
               "example" : "AM_BS__NCBISKYCGH-1993",
               "type" : "string",
               "description" : "The local-unique identifier of this biosample (referenced as \"biosample_id\")."
            },
            "description" : {
               "example" : "Burkitt lymphoma, cell line Namalwa",
               "type" : "string",
               "description" : "A free text description of the biosample."
            },
            "individual_id" : {
               "description" : "In a complete data model \"individual_id\" represents the identifier of this biosample in the \"individuals\" collection.\n",
               "type" : "string",
               "example" : "ind-cnhl-1293347-004"
            },
            "age_at_collection_class" : {
               "example" : {
                  "id" : "HP:0003621",
                  "label" : "Juvenile onset"
               },
               "description" : "the age of the individual at time of biosample collection, as ontology object",
               "schema" : {
                  "$ref" : "./common/Ontology_class"
               }
            },
            "age_at_collection" : {
               "example" : "P56Y",
               "type" : "string",
               "description" : "the age of the individual at time of biosample collection, as ISO8601 string"
            },
            "biocharacteristics" : {
               "example" : [
                  {
                     "class" : {
                        "id" : "pgx:icdot:c25.9",
                        "label" : "Pancreas, NOS"
                     },
                     "description" : "Pancreatic Adenocarcinoma"
                  },
                  {
                     "class" : {
                        "id" : "pgx:icdom:81403",
                        "label" : "Adenocarcinoma, NOS"
                     },
                     "description" : "Pancreatic Adenocarcinoma"
                  },
                  {
                     "class" : {
                        "label" : "Pancreatic Adenocarcinoma",
                        "id" : "ncit:c8294"
                     },
                     "description" : "Pancreatic Adenocarcinoma"
                  }
               ],
               "type" : "array",
               "queries" : [
                  {
                     "query" : "db.biosamples.find( { \"biocharacteristics.class.id\" : \"pgx:icdom:81403\" } )",
                     "description" : "The query will return all biosamples with an (exact) class.id of \"pgx:icdom:81403\" in their \"biocharacteristics\" object list.\n"
                  },
                  {
                     "query" : "db.biosamples.distinct( { \"biocharacteristics.class.id\", \"biocharacteristics.class.id\" : { $regex : /ncit/ } } )",
                     "description" : "This call to the distinct funcion will return *all* bioterms ids for samples having some ncit id; to retrive only the ncit ids, this has to be followed by a regex filter (/^ncit/).\n"
                  }
               ],
               "description" : "\"biocharacteristics\" represents a wrapper list of \"biocharacteristic_class\" objects with properly prefixed term ids, describing features of the biosample.\nExamples would be phenotypes, disease codes or other ontology classes specific to this biosample. In a complete data model (variants - (callsets) - biosamples - individuals), characteristics applying to the individual (e.g. sex, most phenotypes) should be annotated there.\n",
               "items" : {
                  "$ref" : "./common/Biocharacteristic_class"
               }
            }
         }
      }
   },
   "info" : {
      "version" : "2018-09-12",
      "description" : "In this schema, a \"biosample\" as the source of the material of a molecular analysis (e.g. genomic array, sequencing), represents the main “biological item” against which molecular variants are referenced.\n",
      "title" : "GA4GH __biosample__"
   }
}

